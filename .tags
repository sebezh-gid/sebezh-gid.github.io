!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CommonHandler	src/Wiki/CommonHandler.php	/^class CommonHandler$/;"	c
Database	src/Wiki/Database.php	/^class Database {$/;"	c
EditPage	src/Wiki/Handlers/EditPage.php	/^class EditPage extends CommonHandler$/;"	c
FileHandler	src/Wiki/FileHandler.php	/^class FileHandler extends Handlers$/;"	c
FileList	src/Wiki/Handlers/FileList.php	/^class FileList extends Handlers$/;"	c
Handlers	src/Wiki/Handlers.php	/^class Handlers$/;"	c
Page	src/Wiki/Handlers/Page.php	/^class Page extends CommonHandler$/;"	c
Page	src/Wiki/Page.php	/^class Page {$/;"	c
Parser	src/Wiki/Parser.php	/^class Parser$/;"	c
Search	src/Wiki/Handlers/Search.php	/^class Search extends Handlers$/;"	c
Sphinx	src/Wiki/Sphinx.php	/^class Sphinx$/;"	c
Template	src/Wiki/Template.php	/^class Template$/;"	c
Thumbnail	src/Wiki/Handlers/Thumbnail.php	/^class Thumbnail extends Handlers$/;"	c
Upload	src/Wiki/Handlers/Upload.php	/^class Upload extends CommonHandler$/;"	c
UploadHandler	src/Wiki/UploadHandler.php	/^class UploadHandler extends Handlers$/;"	c
Util	src/Wiki/Util.php	/^class Util$/;"	c
__construct	src/Wiki/CommonHandler.php	/^    public function __construct($container)$/;"	f
__construct	src/Wiki/Database.php	/^    public function __construct(array $dsn)$/;"	f
__construct	src/Wiki/Handlers.php	/^    public function __construct($container)$/;"	f
__construct	src/Wiki/Sphinx.php	/^    public function __construct(array $settings, $db)$/;"	f
__construct	src/Wiki/Template.php	/^    public function __construct(array $settings)$/;"	f
__get	src/Wiki/CommonHandler.php	/^    public function __get($key)$/;"	f
__get	src/Wiki/Handlers.php	/^    public function __get($key)$/;"	f
__invoke	src/Wiki/CommonHandler.php	/^    public function __invoke(Request $request, Response $response, array $args)$/;"	f
body	src/Wiki/Handlers/Thumbnail.php	/^        $body = ob_get_clean();$/;"	v
caption	src/Wiki/Handlers/Page.php	/^                    $caption = htmlspecialchars(trim($n[1]));$/;"	v
caption	src/Wiki/Handlers/Page.php	/^                    $caption = null;$/;"	v
class.	src/Wiki/Database.php	/^ * Database interface class.$/;"	c
cleanHtml	src/Wiki/Util.php	/^    public static function cleanHtml($html)$/;"	f
cls	src/Wiki/Handlers/Page.php	/^            $cls = $tmp ? "good" : "broken";$/;"	v
code	src/Wiki/UploadHandler.php	/^                $code = "<a class='image' href='\/files\/{$info["name"]}' data-fancybox='gallery' data-caption='No description'><img src='\/thumbnail\/{$tn}' alt='{$info["real_name"]}'\/><\/a>";$/;"	v
conn	src/Wiki/Database.php	/^            $this->conn = new \\PDO($this->dsn["name"], $this->dsn["user"], $this->dsn["password"]);$/;"	v
conn	src/Wiki/Database.php	/^        $this->conn = null;$/;"	v
conn	src/Wiki/Database.php	/^    protected $conn;$/;"	v
conn	src/Wiki/Sphinx.php	/^        $this->conn = new \\PDO("mysql:host={$settings["host"]};port={$settings["port"]}", null, null);$/;"	v
conn	src/Wiki/Sphinx.php	/^    protected $conn;$/;"	v
connect	src/Wiki/Database.php	/^    protected function connect()$/;"	f
container	src/Wiki/CommonHandler.php	/^        $this->container = $container;$/;"	v
container	src/Wiki/CommonHandler.php	/^    protected $container;$/;"	v
container	src/Wiki/Handlers.php	/^        $this->container = $container;$/;"	v
container	src/Wiki/Handlers.php	/^    protected $container;$/;"	v
container	src/dependencies.php	/^$container = $app->getContainer();$/;"	v
contents	src/Wiki/Handlers.php	/^            $contents = "# {$pageName}\\n\\n**{$pageName}** -- something that we don't have information on, yet.\\n";$/;"	v
contents	src/Wiki/Handlers.php	/^            $contents = $page["source"];$/;"	v
contents	src/Wiki/Handlers/EditPage.php	/^                $contents = "# sebezh-gid.ru #{$pageName}\\n\\n- Русский: [[страница]]\\n- English: [[something]]";$/;"	v
contents	src/Wiki/Handlers/EditPage.php	/^                $contents = "# {$pageName}\\n\\n**{$pageName}** -- something that we don't have information on, yet.\\n";$/;"	v
contents	src/Wiki/Handlers/EditPage.php	/^            $contents = $page["source"];$/;"	v
converter	src/Wiki/Template.php	/^            $converter = new CommonMarkConverter();$/;"	v
data	src/Wiki/Handlers/Page.php	/^        $data = [$/;"	v
db	src/Wiki/Database.php	/^        $db = $this->connect();$/;"	v
db	src/Wiki/Handlers.php	/^        $this->db = $container->get("database");$/;"	v
db	src/Wiki/Handlers.php	/^    protected $db;$/;"	v
db	src/Wiki/Sphinx.php	/^        $this->db = $db;$/;"	v
db	src/Wiki/Sphinx.php	/^    protected $db;$/;"	v
dbFetch	src/Wiki/Database.php	/^    protected function dbFetch($query, array $params = array(), $callback = null)$/;"	f
dbFetchOne	src/Wiki/Database.php	/^    protected function dbFetchOne($query, array $params = array())$/;"	f
dbQuery	src/Wiki/Database.php	/^    protected function dbQuery($query, array $params = array())$/;"	f
debug	src/dependencies.php	/^function debug()$/;"	f
divisor	src/Wiki/Handlers/Thumbnail.php	/^        $divisor = array_sum(array_map('array_sum', $sharpenMatrix));$/;"	v
dsn	src/Wiki/Database.php	/^        $this->dsn = $dsn;$/;"	v
dsn	src/Wiki/Database.php	/^    protected $dsn;$/;"	v
dst	src/Wiki/Handlers/Thumbnail.php	/^                $dst = imagecreatetruecolor($nw, $nh);$/;"	v
dst	src/Wiki/Handlers/Thumbnail.php	/^        $dst = $_SERVER["DOCUMENT_ROOT"] . $request->getUri()->getPath();$/;"	v
error	src/Wiki/Handlers/Search.php	/^            $error = false;$/;"	v
error	src/Wiki/Handlers/Search.php	/^            $error = true;$/;"	v
ext	src/Wiki/Handlers/Upload.php	/^        $ext = mb_strtolower(pathinfo($res["real_name"], PATHINFO_EXTENSION));$/;"	v
ext	src/Wiki/UploadHandler.php	/^        $ext = mb_strtolower(pathinfo($res["real_name"], PATHINFO_EXTENSION));$/;"	v
extractProperties	src/Wiki/Parser.php	/^    public static function extractProperties($pageName, $text)$/;"	f
extractProperties	src/Wiki/Template.php	/^    public static function extractProperties($pageName, $text)$/;"	f
fd	src/Wiki/Handlers/Page.php	/^                $fd = $this->db->getPageByName("File:" . $m[1]);$/;"	v
fi	src/Wiki/UploadHandler.php	/^                $fi = pathinfo($info["name"]);$/;"	v
file	src/Wiki/FileHandler.php	/^        $file = $this->db->getFileByName($name);$/;"	v
file	src/Wiki/Handlers/Page.php	/^            $file = $this->db->getFileByName($m[1]);$/;"	v
file	src/Wiki/Handlers/Thumbnail.php	/^        $file = $this->db->getFileByName($name);$/;"	v
file	src/Wiki/Handlers/Upload.php	/^        $file = $files["file"];$/;"	v
files	src/Wiki/Handlers/FileList.php	/^        $files = $this->db->findFiles();$/;"	v
files	src/Wiki/Handlers/Upload.php	/^        $files = $request->getUploadedFiles();$/;"	v
files	src/Wiki/UploadHandler.php	/^        $files = $request->getUploadedFiles();$/;"	v
findFiles	src/Wiki/Database.php	/^    public function findFiles()$/;"	f
fname	src/Wiki/Handlers/Page.php	/^                $fname = $m[1];$/;"	v
fresh	src/Wiki/Handlers/Page.php	/^                $fresh = true;$/;"	v
fresh	src/Wiki/Handlers/Page.php	/^        $fresh = $request->getQueryParam("cache") == "no";$/;"	v
getAllPageNames	src/Wiki/Database.php	/^    public function getAllPageNames()$/;"	f
getByName	src/Wiki/Page.php	/^    public static function getByName($name)$/;"	f
getEdit	src/Wiki/Handlers.php	/^    public function getEdit(Request $request, Response $response)$/;"	f
getFileByHash	src/Wiki/Database.php	/^    public function getFileByHash($hash)$/;"	f
getFileByName	src/Wiki/Database.php	/^    public function getFileByName($name)$/;"	f
getHome	src/Wiki/Handlers.php	/^    public function getHome(Request $request, Response $response)$/;"	f
getIndex	src/Wiki/Handlers.php	/^    public function getIndex(Request $request, Response $response)$/;"	f
getPageById	src/Wiki/Database.php	/^    public function getPageById($id)$/;"	f
getPageByName	src/Wiki/Database.php	/^    public function getPageByName($name)$/;"	f
getSnippet	src/Wiki/Sphinx.php	/^    protected function getSnippet($source, $query)$/;"	f
getThumbnail	src/Wiki/Database.php	/^    public function getThumbnail($name, $type)$/;"	f
hash	src/Wiki/FileHandler.php	/^        $hash = empty($file["hash"])$/;"	v
hash	src/Wiki/Handlers/Thumbnail.php	/^        $hash = md5($body);$/;"	v
hash	src/Wiki/Handlers/Upload.php	/^        $hash = md5($res["body"]);$/;"	v
hash	src/Wiki/UploadHandler.php	/^        $hash = md5($res["body"]);$/;"	v
homePage	src/Wiki/Handlers.php	/^        $homePage = $this->container->get("settings")["wiki"]["homePage"];$/;"	v
html	src/Wiki/Database.php	/^        $html = null;$/;"	v
html	src/Wiki/Handlers.php	/^        $html = Template::renderFile("editor.twig", array($/;"	v
html	src/Wiki/Handlers.php	/^        $html = Template::renderFile("index.twig", array($/;"	v
html	src/Wiki/Handlers/Page.php	/^                    $html = "<a class=\\"image\\" href=\\"{$link}\\" data-fancybox=\\"gallery\\" data-caption=\\"{$caption}\\"><img src=\\"{$thumbnail}\\" alt=\\"{$fname}\\"\/><\/a>";$/;"	v
html	src/Wiki/Handlers/Page.php	/^                    $html = "<a class=\\"image\\" href=\\"{$link}\\" data-fancybox=\\"gallery\\"><img src=\\"{$thumbnail}\\" alt=\\"{$fname}\\"\/><\/a>";$/;"	v
html	src/Wiki/Handlers/Page.php	/^            $html = $page["html"];$/;"	v
html	src/Wiki/Handlers/Page.php	/^            $html = $this->renderPage($page);$/;"	v
html	src/Wiki/Handlers/Page.php	/^        $html = $this->template->renderPage($data, function ($m) {$/;"	v
html	src/Wiki/Parser.php	/^        $html = $md->convertToHtml($source);$/;"	v
html	src/Wiki/Parser.php	/^        $html = preg_replace('@\\s+--\\s+@', '&nbsp;— ', $html);$/;"	v
html	src/Wiki/Parser.php	/^        $html = preg_replace_callback('@<h1>(.+)<\/h1>@', function ($m) use (&$props) {$/;"	v
html	src/Wiki/Parser.php	/^        $html = preg_replace_callback('@\\[\\[(.+?)\\]\\]@', function ($m) {$/;"	v
html	src/Wiki/Template.php	/^            $html = $converter->convertToHtml($src);$/;"	v
html	src/Wiki/Template.php	/^        $html = $md->convertToHtml($pageText);$/;"	v
html	src/Wiki/Template.php	/^        $html = $template->render($data);$/;"	v
html	src/Wiki/Template.php	/^        $html = \\Wiki\\Util::cleanHtml($html);$/;"	v
html	src/Wiki/Template.php	/^        $html = preg_replace_callback('@<h1>(.+)<\/h1>@', function ($m) use (&$props) {$/;"	v
html	src/Wiki/Template.php	/^        $html = preg_replace_callback('@\\[\\[(.+?)\\]\\]@', $link_cb, $html);$/;"	v
html	src/Wiki/Template.php	/^        $html = self::renderFile("page.twig", $data);$/;"	v
html	src/Wiki/Util.php	/^        $html = preg_Replace('@\\s+<\/(html|head|body|div|ul|ol|li|form|input|aside|main|header|footer)>@', '<\/\\\\1>', $html);$/;"	v
html	src/Wiki/Util.php	/^        $html = preg_replace('@\\.  @', '.&nbsp; ', $html);$/;"	v
html	src/Wiki/Util.php	/^        $html = preg_replace('@\\s+--\\s+@', '&nbsp;— ', $html);$/;"	v
html	src/Wiki/Util.php	/^        $html = preg_replace('@\\s+<(html|head|body|div|ul|li|p|header|footer|meta|title|aside|form|input|main|h1|h2|h3|h4|h5|script|!--)@', '<\\\\1', $html);$/;"	v
ih	src/Wiki/Handlers/Thumbnail.php	/^        $ih = imagesy($img);$/;"	v
img	src/Wiki/Handlers/Thumbnail.php	/^                $img = $dst;$/;"	v
img	src/Wiki/Handlers/Thumbnail.php	/^        $img = $this->scaleImage($img, $options);$/;"	v
img	src/Wiki/Handlers/Thumbnail.php	/^        $img = imageCreateFromString($file["body"]);$/;"	v
index	src/Wiki/Sphinx.php	/^        $this->index = $settings["index"];$/;"	v
index	src/Wiki/Sphinx.php	/^    protected $index;$/;"	v
info	src/Wiki/Handlers/Upload.php	/^        $info = $this->receiveFile($file);$/;"	v
info	src/Wiki/UploadHandler.php	/^                $info = $this->receiveFile($file);$/;"	v
isAdmin	src/Wiki/CommonHandler.php	/^    protected function isAdmin(Request $request)$/;"	f
iw	src/Wiki/Handlers/Thumbnail.php	/^        $iw = imagesx($img);$/;"	v
key	src/Wiki/Handlers/Thumbnail.php	/^        $key = $m[2];$/;"	v
length	src/Wiki/Handlers/Thumbnail.php	/^        $length = strlen($tn["body"]);$/;"	v
lines	src/Wiki/Parser.php	/^                $lines = array_slice($lines, $idx + 1);$/;"	v
lines	src/Wiki/Parser.php	/^        $lines = preg_split('@(\\r\\n|\\n)@', $text);$/;"	v
lines	src/Wiki/Template.php	/^                $lines = array_slice($lines, $idx + 1);$/;"	v
lines	src/Wiki/Template.php	/^        $lines = preg_split('@(\\r\\n|\\n)@', $text);$/;"	v
link	src/Wiki/Handlers.php	/^        $link = "\/wiki?name=" . urlencode($homePage);$/;"	v
link	src/Wiki/Handlers/Page.php	/^                $link = "\/files\/" . $fname;$/;"	v
link	src/Wiki/Handlers/Page.php	/^            $link = "\/wiki?name=" . urlencode($m[1]);$/;"	v
link	src/Wiki/Handlers/Page.php	/^            $link = sprintf("<a class=\\"wiki %s\\" href=\\"\/wiki?name=%s\\" title=\\"%s\\">%s<\/a>", $cls, urlencode($target), htmlspecialchars($target), htmlspecialchars($title));$/;"	v
link	src/Wiki/Parser.php	/^            $link = sprintf("<a class=\\"wiki\\" href=\\"\/wiki?name=%s\\" title=\\"%s\\">%s<\/a>", urlencode($target), htmlspecialchars($title), htmlspecialchars($title));$/;"	v
listPages	src/Wiki/Database.php	/^    public function listPages($sort = null)$/;"	f
loadThumbnail	src/Wiki/Handlers/Thumbnail.php	/^    protected function loadThumbnail($name, $type)$/;"	f
loader	src/Wiki/Template.php	/^        $loader = new \\Twig\\Loader\\FilesystemLoader($root);$/;"	v
logger	src/dependencies.php	/^    $logger = new Monolog\\Logger($settings['name']);$/;"	v
md	src/Wiki/Parser.php	/^        $md = new CommonMarkConverter();$/;"	v
md	src/Wiki/Template.php	/^        $md = new CommonMarkConverter();$/;"	v
mimeType	src/Wiki/Handlers/Thumbnail.php	/^        $mimeType = "image\/jpeg";$/;"	v
name	src/Wiki/FileHandler.php	/^        $name = $args["name"];$/;"	v
name	src/Wiki/Handlers.php	/^        $name = $_POST["page_name"];$/;"	v
name	src/Wiki/Handlers/EditPage.php	/^        $name = $_POST["page_name"];$/;"	v
name	src/Wiki/Handlers/Thumbnail.php	/^        $name = $m[1] . "." . $m[3];$/;"	v
name	src/Wiki/Handlers/Upload.php	/^        $name = "File:{$info["name"]}";$/;"	v
nh	src/Wiki/Handlers/Thumbnail.php	/^                $nh = round($nw \/ $r);$/;"	v
now	src/Wiki/Database.php	/^        $now = time();$/;"	v
nw	src/Wiki/Handlers/Thumbnail.php	/^                $nw = $options["width"];$/;"	v
offset	src/Wiki/Handlers/Thumbnail.php	/^        $offset = 0;$/;"	v
onGet	src/Wiki/FileHandler.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onGet	src/Wiki/Handlers/EditPage.php	/^    public function onGet(Request $request, Response $response)$/;"	f
onGet	src/Wiki/Handlers/FileList.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onGet	src/Wiki/Handlers/Page.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onGet	src/Wiki/Handlers/Search.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onGet	src/Wiki/Handlers/Thumbnail.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onGet	src/Wiki/Handlers/Upload.php	/^    public function onGet(Request $request, Response $response, array $args)$/;"	f
onPost	src/Wiki/Handlers/EditPage.php	/^    public function onPost(Request $request, Response $response, array $args)$/;"	f
onPost	src/Wiki/Handlers/Upload.php	/^    public function onPost(Request $request, Response $response)$/;"	f
onPost	src/Wiki/UploadHandler.php	/^    public function onPost(Request $request, Response $response)$/;"	f
options	src/Wiki/Handlers/Thumbnail.php	/^        $options = array_merge([$/;"	v
page	src/Wiki/Handlers.php	/^        $page = $this->db->getPageByName($pageName);$/;"	v
page	src/Wiki/Handlers/EditPage.php	/^        $page = $this->db->getPageByName($pageName);$/;"	v
page	src/Wiki/Handlers/Page.php	/^        $page = $this->db->getPageByName($pageName);$/;"	v
page	src/Wiki/Sphinx.php	/^            $page = $this->db->getPageById($row["id"]);$/;"	v
pageName	src/Wiki/Handlers.php	/^        $pageName = $request->getQueryParam("name");$/;"	v
pageName	src/Wiki/Handlers/EditPage.php	/^        $pageName = $request->getQueryParam("name");$/;"	v
pageName	src/Wiki/Handlers/Page.php	/^        $pageName = $request->getQueryParam("name");$/;"	v
pageName	src/Wiki/Template.php	/^        $pageName = $data["page_name"];$/;"	v
pageText	src/Wiki/Template.php	/^        $pageText = $data["page_source"];$/;"	v
pages	src/Wiki/Handlers.php	/^        $pages = $this->db->listPages(@$_GET["sort"]);$/;"	v
parse	src/Wiki/Parser.php	/^    public static function parse($name, $source)$/;"	f
parseName	src/Wiki/Handlers/Thumbnail.php	/^    protected function parseName($name)$/;"	f
part1	src/Wiki/Handlers/Upload.php	/^        $part1 = substr(sha1($_SERVER["DOCUMENT_ROOT"]), 0, 10);$/;"	v
part1	src/Wiki/UploadHandler.php	/^        $part1 = substr(sha1($_SERVER["DOCUMENT_ROOT"]), 0, 10);$/;"	v
part2	src/Wiki/Handlers/Upload.php	/^        $part2 = substr(sha1($res["body"]), 0, 10);$/;"	v
part2	src/Wiki/UploadHandler.php	/^        $part2 = substr(sha1($res["body"]), 0, 10);$/;"	v
part3	src/Wiki/Handlers/Upload.php	/^        $part3 = sprintf("%x", time());$/;"	v
part3	src/Wiki/UploadHandler.php	/^        $part3 = sprintf("%x", time());$/;"	v
parts	src/Wiki/Handlers/Page.php	/^            $parts = explode("|", $m[1], 2);$/;"	v
parts	src/Wiki/Parser.php	/^            $parts = explode("|", $m[1], 2);$/;"	v
pi	src/Wiki/Handlers/Page.php	/^                    $pi = pathinfo($file["name"]);$/;"	v
pi	src/Wiki/Handlers/Page.php	/^                $pi = pathinfo($fname);$/;"	v
postEdit	src/Wiki/Handlers.php	/^    public function postEdit(Request $request, Response $response)$/;"	f
prepareThumbnail	src/Wiki/Handlers/Thumbnail.php	/^    protected function prepareThumbnail($name, $type, array $options)$/;"	f
props	src/Wiki/Parser.php	/^        $props = array($/;"	v
props	src/Wiki/Template.php	/^        $props = array($/;"	v
query	src/Wiki/Handlers/Search.php	/^        $query = @$_GET["query"];$/;"	v
r	src/Wiki/Handlers/Thumbnail.php	/^                $r = $iw \/ $ih;$/;"	v
receiveFile	src/Wiki/Handlers/Upload.php	/^    protected function receiveFile(UploadedFile $file)$/;"	f
receiveFile	src/Wiki/UploadHandler.php	/^    protected function receiveFile(UploadedFile $file)$/;"	f
render	src/Wiki/Template.php	/^    public function render(Response $response, $fileName, array $data = array())$/;"	f
renderFile	src/Wiki/Template.php	/^    public static function renderFile($templateName, array $data = array())$/;"	f
renderPage	src/Wiki/Handlers/Page.php	/^    protected function renderPage(array $page)$/;"	f
renderPage	src/Wiki/Template.php	/^    public function renderPage(array $data, $link_cb)$/;"	f
requireAdmin	src/Wiki/CommonHandler.php	/^    protected function requireAdmin(Request $request)$/;"	f
res	src/Wiki/Database.php	/^        $res = $this->dbFetchOne("SELECT `id`, `name`, `source`, `html`, `created`, `updated` FROM `pages` WHERE `id` = ?", [$id]);$/;"	v
res	src/Wiki/Database.php	/^        $res = $this->dbFetchOne("SELECT `id`, `name`, `source`, `html`, `created`, `updated` FROM `pages` WHERE `name` = ?", array($name));$/;"	v
res	src/Wiki/Database.php	/^        $res = array();$/;"	v
res	src/Wiki/Handlers/Search.php	/^            $res = $query ? $this->sphinx->search($query) : null;$/;"	v
res	src/Wiki/Handlers/Search.php	/^            $res = [];$/;"	v
res	src/Wiki/Handlers/Thumbnail.php	/^                $res = imagecopyresampled($dst, $img, 0, 0, 0, 0, $nw, $nh, $iw, $ih);$/;"	v
res	src/Wiki/Handlers/Thumbnail.php	/^        $res = $this->db->getThumbnail($name, $type);$/;"	v
res	src/Wiki/Handlers/Upload.php	/^        $res = array($/;"	v
res	src/Wiki/Sphinx.php	/^        $res = $this->searchIds($query);$/;"	v
res	src/Wiki/Sphinx.php	/^        $res = array();$/;"	v
res	src/Wiki/UploadHandler.php	/^        $res = array($/;"	v
response	src/Wiki/FileHandler.php	/^        $response = $response->withHeader("Content-Type", $file["type"])$/;"	v
response	src/Wiki/Handlers/Thumbnail.php	/^        $response = $response->withHeader("Content-Type", $mimeType)$/;"	v
root	src/Wiki/Template.php	/^        $root = $settings["template_path"];$/;"	v
root	src/Wiki/Template.php	/^        $root = __DIR__ . "\/..\/..\/templates";$/;"	v
rows	src/Wiki/Database.php	/^        $rows = $this->dbFetch("SELECT * FROM `files` WHERE `hash` = ?", [$hash]);$/;"	v
rows	src/Wiki/Database.php	/^        $rows = $this->dbFetch("SELECT * FROM `files` WHERE `name` = ?", [$name]);$/;"	v
rows	src/Wiki/Database.php	/^        $rows = $this->dbFetch("SELECT * FROM `thumbnails` WHERE `name` = ? AND `type` = ?", [$name, $type]);$/;"	v
rows	src/Wiki/Database.php	/^        $rows = $this->dbFetch("SELECT `id`, `name`, `real_name`, `type`, `length`, `created`, `hash` FROM `files` ORDER BY `real_name`");$/;"	v
rows	src/Wiki/Database.php	/^        $rows = $this->dbFetch("SELECT `name` FROM `pages` ORDER BY `name`");$/;"	v
rows	src/Wiki/Sphinx.php	/^        $rows = $sth->fetchAll(\\PDO::FETCH_ASSOC);$/;"	v
saveFile	src/Wiki/Database.php	/^    public function saveFile(array $fileInfo)$/;"	f
saveThumbnail	src/Wiki/Database.php	/^    public function saveThumbnail($name, $type, $body)$/;"	f
scaleImage	src/Wiki/Handlers/Thumbnail.php	/^    protected function scaleImage($img, array $options)$/;"	f
search	src/Wiki/Sphinx.php	/^    public function search($query)$/;"	f
searchIds	src/Wiki/Sphinx.php	/^    protected function searchIds($query)$/;"	f
set	src/Wiki/Handlers/Thumbnail.php	/^        $set = $this->container->get("settings")["thumbnails"];$/;"	v
settings	src/Wiki/Sphinx.php	/^        $settings = array_merge([$/;"	v
settings	src/dependencies.php	/^    $settings = $c->get('settings')['logger'];$/;"	v
settings	src/dependencies.php	/^    $settings = $c->get('settings')['renderer'];$/;"	v
settings	src/dependencies.php	/^    $settings = $c->get('settings')['sphinx'];$/;"	v
settings	src/dependencies.php	/^    $settings = $c->get('settings')['templates'];$/;"	v
sharpenImage	src/Wiki/Handlers/Thumbnail.php	/^    protected function sharpenImage($img)$/;"	f
sharpenMatrix	src/Wiki/Handlers/Thumbnail.php	/^        $sharpenMatrix = array($/;"	v
snip	src/Wiki/Sphinx.php	/^            $snip = $this->getSnippet($html, $query);$/;"	v
status	src/Wiki/Handlers/Page.php	/^            $status = 200;$/;"	v
status	src/Wiki/Handlers/Page.php	/^            $status = 404;$/;"	v
sth	src/Wiki/Database.php	/^        $sth = $db->prepare($query);$/;"	v
sth	src/Wiki/Sphinx.php	/^        $sth = $this->conn->prepare("CALL SNIPPETS(?, ?, ?, 10 AS around, 500 AS limit)");$/;"	v
sth	src/Wiki/Sphinx.php	/^        $sth = $this->conn->prepare("SELECT * FROM `{$this->index}` WHERE MATCH (?)");$/;"	v
stmt	src/Wiki/Database.php	/^        $stmt = $this->dbQuery("UPDATE `pages` SET `source` = ?, `html` = ?, `updated` = ? WHERE `name` = ?", array($text, $html, $now, $name));$/;"	v
target	src/Wiki/Handlers/Page.php	/^                $target = $parts[0];$/;"	v
target	src/Wiki/Parser.php	/^                $target = $parts[0];$/;"	v
template	src/Wiki/Template.php	/^        $template = $this->twig->load($fileName);$/;"	v
template	src/Wiki/Template.php	/^        $template = $twig->load($templateName);$/;"	v
text	src/Wiki/Handlers.php	/^        $text = $_POST["page_source"];$/;"	v
text	src/Wiki/Handlers/EditPage.php	/^        $text = $_POST["page_source"];$/;"	v
text	src/Wiki/Handlers/Upload.php	/^        $text = "# Файл {$info["name"]}\\n\\nОписание файла отсутствует.\\n";$/;"	v
text	src/Wiki/Parser.php	/^                $text = implode("\\r\\n", $lines);$/;"	v
text	src/Wiki/Template.php	/^                $text = implode("\\r\\n", $lines);$/;"	v
thumbnail	src/Wiki/Handlers/Page.php	/^                $thumbnail = "\/thumbnail\/" . $pi["filename"] . "_small." . $pi["extension"];$/;"	v
title	src/Wiki/Handlers/Page.php	/^                $title = $parts[0];$/;"	v
title	src/Wiki/Handlers/Page.php	/^                $title = $parts[1];$/;"	v
title	src/Wiki/Parser.php	/^                $title = $parts[0];$/;"	v
title	src/Wiki/Parser.php	/^                $title = $parts[1];$/;"	v
tmp	src/Wiki/Handlers/Page.php	/^            $tmp = $this->db->getPageByName($target);$/;"	v
tmp	src/Wiki/Handlers/Upload.php	/^        $tmp = tempnam($_SERVER["DOCUMENT_ROOT"], "upload_");$/;"	v
tmp	src/Wiki/UploadHandler.php	/^        $tmp = tempnam($_SERVER["DOCUMENT_ROOT"], "upload_");$/;"	v
tn	src/Wiki/Handlers/Thumbnail.php	/^            $tn = $this->prepareThumbnail($name, $type, $options);$/;"	v
tn	src/Wiki/UploadHandler.php	/^                $tn = $fi["filename"] . "_small." . $fi["extension"];$/;"	v
tpl	src/dependencies.php	/^    $tpl = new \\Wiki\\Template($settings);$/;"	v
twig	src/Wiki/Template.php	/^        $this->twig = new \\Twig\\Environment($loader);$/;"	v
twig	src/Wiki/Template.php	/^        $twig = new \\Twig\\Environment($loader);$/;"	v
twig	src/Wiki/Template.php	/^    protected $twig;$/;"	v
twig	src/dependencies.php	/^        $twig = $c->get("template");$/;"	v
updatePage	src/Wiki/Database.php	/^    public function updatePage($name, $text)$/;"	f
updatePageHtml	src/Wiki/Database.php	/^    public function updatePageHtml($pageName, $html)$/;"	f
